#define ramIndex 0
#define index ##0


.ORIGIN ##0xffff
.DB ramIndex = 0
.DB i = 0

.ORIGIN 0x00fa

#include "bf_funcs_asm.txt"	

.ORIGIN 0x00

MAIN_LOOP:

	LOAD r0,@prog[i]
	
	casePlus:		
		CMP @prog,'+' ;CMP prog[i],'+'
		JMP minusCheck
			CALL BF_INC
			
	caseNegative:
		CMP prog[i],'-'
		JMP next
			CALL BF_DEC
	
	caseMoveRight:
		CMP prog[i], '>'
		JMP next
			CALL BF_MOVE_RIGHT
	
	caseMoveLeft:
		CMP prog[i], '<'
		JMP next
			CALL BF_MOVE_LEFT

	caseLoopStart:
		CMP prog[i], '['		
		JMP next
			CALL BF_START_LOOP
			
	caseLoopEnd:
		CMP prog[i], ']'		
		JMP next
			CALL BF_END_LOOP
			
			
	;if(i < program.size()) JUMP MAIN_LOOP		
	CMP i, programSize
	JGZ MAIN_LOOP
	
	